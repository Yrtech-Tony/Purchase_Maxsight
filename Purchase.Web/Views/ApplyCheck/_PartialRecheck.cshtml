@using Purchase.Service.DTO
@model IEnumerable<RecheckUserSelectDto>

<div class="count2">
    <form id="recheck-form">
        <input type="hidden" id="ApplyId" name="ApplyId" />
        <input type="hidden" id="SeqNO" name="SeqNO" />
        <div style="text-align:left;" class="radio-group">
            <label>审核状态:</label>
            <input id="excuteRadioGroup1_0" name="RecheckStatusCode" type="radio" value="同意" class="rido" checked>
            <label for="excuteRadioGroup1_0">同意</label>
            <input id="excuteRadioGroup1_1" name="RecheckStatusCode" type="radio" value="拒绝" class="rido">
            <label for="excuteRadioGroup1_1">拒绝</label>
            <input id="excuteRadioGroup1_2" name="RecheckStatusCode" type="radio" value="终止" class="rido">
            <label for="excuteRadioGroup1_2">终止</label>
        </div>
        <br />
        <table id="RecheckUserSelect-table" class="table table-bordered table-condensed table-hover">

            @if (Model.Count() != 0)
            {
                <thead>
                    <tr>
                        <th width="80">选择</th>
                        <th>姓名</th>
                        <th>部门</th>
                        <th>职位</th>
                    </tr>
                </thead>
            }
            <tbody>
                @if (Model != null)
                {
                    foreach (RecheckUserSelectDto item in Model)
                    {
                        <tr>
                            <td>@Html.RadioButton("RecheckUserId", item.RecheckUserId)</td>
                            <td>@item.UserName</td>
                            <td>@item.DepartmentName</td>
                            <td>@item.PositionName</td>
                        </tr>
                    }
                }
            </tbody>
        </table>
        <textarea id="RecheckReason" name="RecheckReason" class="form-control" rows="3"></textarea>
    </form>
    <div class="mt20" style="text-align:right;">
        <button id="btnApply" type="button" class="btn btn-primary" style="width:100px;">提交</button>
    </div>
</div>

<script>
    $(function () {
        debugger
        if ($("#RecheckUserSelect-table tbody tr").length == 1) {
            $("#RecheckUserSelect-table tbody tr:first-child").find("input[type=radio]").prop("checked", true).change();
        }
    })
    $("input:radio[name=RecheckStatusCode]").change(function () {
        if ($(this).is(":checked") && $(this).val() == "同意") {
            $("#RecheckUserSelect-table").show();
        } else {
            $("#RecheckUserSelect-table").hide();
        }
    })
    $("#btnApply").click(function () {
        debugger
        var checkRadio = $("#RecheckUserSelect-table input[type=radio]:checked").val();
        var applyStatus = $("input:radio[name=RecheckStatusCode]:checked").val();
        debugger
        if ('@Model.Count()' != '0') {
            //if (!$("#RecheckUserSelect-table").is(":hidden")) {
            if (applyStatus == "同意" && !checkRadio) {
                alert("请选择下一个处理人员！");
                return;
                //}
            }
        }
        $("#btnApply").button("loading");
        var delSure = "";
        if (applyStatus == "拒绝") {
            if (isEmpty($("#RecheckReason").val())) {
                alert("拒绝必须填写理由");
                $("#btnApply").button("reset");
                return;
            }
            confirm("您确定要拒绝吗？", function () {
                var params = $("#recheck-form").serializeJson();
                params = $.extend(params, { nextRecheckUserId: checkRadio });
                console.log(params);
                $.post("/ApplyCheck/RecheckCommit", params, function () {
                    recheckFinish();
                }).complete(function () { $("#btnApply").button("reset"); })
            });
        } else if (applyStatus == "终止") {
            if (isEmpty($("#RecheckReason").val())) {
                alert("终止必须填写理由");
                $("#btnApply").button("reset");
                return;
            }
            confirm("您确定要终止吗？", function () {
                var params = $("#recheck-form").serializeJson();
                params = $.extend(params, { nextRecheckUserId: checkRadio });
                console.log(params);
                $.post("/ApplyCheck/RecheckCommit", params, function () {
                    recheckFinish();
                }).complete(function () { $("#btnApply").button("reset"); })
            });
        }
        else {
            if ($("#ApplyTypeIdForRecheck").val() == "确认单") {
                $.post("/ApplyCheck/ApplyDetail_Quotation_CheckSelect", { ApplyId: $("#recheck-form #ApplyId").val() }, function (data) {
                    if (parseInt(data) == 0) {
                        alert("未勾选终版确认单，请先勾选");
                        $("#btnApply").button("reset");
                        return false;
                    }
                    var params = $("#recheck-form").serializeJson();
                    params = $.extend(params, { nextRecheckUserId: checkRadio });
                    console.log(params);
                    $.post("/ApplyCheck/RecheckCommit", params, function () {
                        recheckFinish();
                    }).complete(function () { $("#btnApply").button("reset"); })
                })
            }
            else {
                var params = $("#recheck-form").serializeJson();
                params = $.extend(params, { nextRecheckUserId: checkRadio });
                console.log(params);
                $.post("/ApplyCheck/RecheckCommit", params, function () {
                    recheckFinish();
                }).complete(function () { $("#btnApply").button("reset"); })

            }
        }
    })
    function isEmpty(value) {
        if (value == "")
            return true;
        else
            return false;
    }

</script>
